// TODO: Remove this block once we re-upgrade jruby-gradle-jar-plugin..
// See #1: https://github.com/embulk/embulk/issues/954
// See #2: https://github.com/jruby-gradle/jruby-gradle-plugin/issues/297
repositories {
    mavenLocal()
    maven { url 'http://rubygems-proxy.torquebox.org/releases' }
}

apply plugin: 'com.github.jruby-gradle.jar'

// TODO: Have more details in description and summary.
description = 'Embulk standard plugins'
ext {
    summary = 'Embulk standard plugins'
}

// include ruby scripts to jar. don't use sourceSets.main.resources.srcDirs
// because IntelliJ causes error if srcDirs includes files out of projectDir.
processResources.from("${buildDir}/embulk_gem_complements")

import com.github.jrubygradle.JRubyExec

repositories {
    mavenCentral()
}

dependencies {
    compile project(':embulk-core')
    compile 'org.apache.commons:commons-compress:1.10'

    testCompile 'junit:junit:4.12'
    testCompile project(':embulk-core').sourceSets.test.output
    testCompile project(':embulk-test')
    testCompile 'ch.qos.logback:logback-classic:1.1.3'

    jrubyExec 'rubygems:simplecov:0.10.+'
    jrubyExec 'rubygems:test-unit:3.0.+'
}

jruby {
    execVersion = rootProject.jrubyVersion
}

task rubyTestVanilla(type: JRubyExec, dependsOn: [":embulk-core:compileTestJava", "jar", "prepareDependencyJars", "prepareTestDependencyJars"]) {
    jrubyArgs '-Isrc/main/ruby', '-Isrc/test/ruby', '--debug', './src/test/ruby/vanilla/run-test.rb'
}
test.dependsOn(['rubyTestVanilla'])

String buildRubyStyleVersionFromJavaStyleVersion(String javaStyleVersion) {
    if (javaStyleVersion.contains('-')) {
        List<String> versionTokens = javaStyleVersion.tokenize('-');
        if (versionTokens.size() != 2) {
            throw new GradleException('Invalid project version: ' + javaStyleVersion);
        }
        return versionTokens.get(0) + '.' + versionTokens.get(1).toLowerCase();
    }
    else {
        return javaStyleVersion;
    }
}

task prepareDependencyJars(type: Copy) {
    doFirst {
        delete("${buildDir}/dependency_jars")
    }
    from configurations.runtime
    into "${buildDir}/dependency_jars"
}

task prepareTestDependencyJars(type: Copy) {
    doFirst {
        delete("${buildDir}/test_dependency_jars")
    }
    from configurations.testRuntime
    into "${buildDir}/test_dependency_jars"
}

task complementEmbulkGem {
    doFirst {
        delete("${buildDir}/embulk_gem_complements")
    }
    doLast {
        def rubyVersion = buildRubyStyleVersionFromJavaStyleVersion("${project.version}")
        file("${buildDir}/embulk_gem_complements/gems/embulk-${rubyVersion}-java/lib").mkdirs()
        copy {
            from "${projectDir}/src/main/ruby"
            into "${buildDir}/embulk_gem_complements/gems/embulk-${rubyVersion}-java/lib"
        }
    }
}
processResources.dependsOn("complementEmbulkGem")
